version: '3'

services:
    rsshub:
        image: diygod/rsshub
        restart: always
        ports:
            - '1200:1200'
        environment:
            NODE_ENV: production
            CACHE_TYPE: redis
            REDIS_URL: 'redis://redis:6379/'
            PUPPETEER_WS_ENDPOINT: 'ws://browserless:3000'
        depends_on:
            - redis
            - browserless

    browserless:
        # See issue 6680
        image: browserless/chrome:1.43-chrome-stable
        restart: always

    redis:
        image: redis:alpine
        restart: always
        volumes:
            - redis-data:/data
    service.rss:
        image: wangqiru/ttrss:latest
        container_name: ttrss
        ports:
            - 1300:80
        environment:
            - SELF_URL_PATH=http://1.116.185.177:1300/ # please change to your own domain
            - DB_PASS=161213 # use the same password defined in `database.postgres`
            - PUID=1000
            - PGID=1000
        volumes:
            - feed-icons:/var/www/feed-icons/
        networks:
            - public_access
            - service_only
            - database_only
        stdin_open: true
        tty: true
        restart: always

    service.mercury: # set Mercury Parser API endpoint to `service.mercury:3000` on TTRSS plugin setting page
        image: wangqiru/mercury-parser-api:latest
        container_name: mercury
        networks:
            - public_access
            - service_only
        restart: always

    service.opencc: # set OpenCC API endpoint to `service.opencc:3000` on TTRSS plugin setting page
        image: wangqiru/opencc-api-server:latest
        container_name: opencc
        environment:
            - NODE_ENV=production
        networks:
            - service_only
        restart: always

    database.postgres:
        image: postgres:13-alpine
        container_name: postgres
        environment:
            - POSTGRES_PASSWORD=161213 # feel free to change the password
        volumes:
            - ~/postgres/data/:/var/lib/postgresql/data # persist postgres data to ~/postgres/data/ on the host
        networks:
            - database_only
        restart: always

volumes:
    redis-data:
    feed-icons:

networks:
  public_access: # Provide the access for ttrss UI
  service_only: # Provide the communication network between services only
    internal: true
  database_only: # Provide the communication between ttrss and database only
    internal: true
